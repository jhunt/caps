static struct {
	int bit;
	const char *name;
	const char *summary;
} CAPS[] = {
	{ .bit =  0, .name = "chown",
	  .summary = "Make arbitrary changes to file UIDs and GIDs" },
	{ .bit =  1, .name = "dac_override",
	  .summary = "Bypass file read, write, and execute permission checks." },
	{ .bit =  2, .name = "dac_read_search",
	  .summary = "Bypass file read permission checks and directory read and execute permission checks." },
	{ .bit =  3, .name = "fowner",
	  .summary = "Bypass file ownership / process owner equality permission checks." },
	{ .bit =  4, .name = "fsetid",
	  .summary = "Don't clear set-user-ID and set-group-ID mode bits when a file is modified" },
	{ .bit =  5, .name = "kill",
	  .summary = "Bypass permission checks for sending signals." },
	{ .bit =  6, .name = "setgid",
	  .summary = "Make arbitrary manipulations of process GIDs and supplementary GID list." },
	{ .bit =  7, .name = "setuid",
	  .summary = "Make arbitrary manipulations of process UIDs." },
	{ .bit =  8, .name = "setpcap",
	  .summary = "Manage capability sets (from bounded / inherited set)." },
	{ .bit =  9, .name = "linux_immutable",
	  .summary = "Set files to be immutable or append-only." },
	{ .bit =  10, .name = "net_bind_service",
	  .summary = "Bind a socket to Internet domain privileged ports." },
	{ .bit =  11, .name = "net_broadcast",
	  .summary = "Make socket broadcasts, and listen to multicasts.  DEPRECATED." },
	{ .bit =  12, .name = "net_admin",
	  .summary = "Manage network configuration and interfaces (broad scope)." },
	{ .bit =  13, .name = "net_raw",
	  .summary = "Use RAW and PACKET sockets." },
	{ .bit =  14, .name = "ipc_lock",
	  .summary = "Lock memory, via mlock(2) and friends." },
	{ .bit =  15, .name = "ipc_owner",
	  .summary = "Bypass permission checks for operations on System V IPC objects." },
	{ .bit =  16, .name = "sys_module",
	  .summary = "Load and unload kernel modules." },
	{ .bit =  17, .name = "sys_rawio",
	  .summary = "Perform I/O port operations" },
	{ .bit =  18, .name = "sys_chroot",
	  .summary = "Use chroot(2) and manage kernel namespaces." },
	{ .bit =  19, .name = "sys_ptrace",
	  .summary = "Trace arbitrary processes using ptrace." },
	{ .bit =  20, .name = "sys_pacct",
	  .summary = "Use the acct(2) system call." },
	{ .bit =  21, .name = "sys_admin",
	  .summary = "Basically be root again.  This is a HUGE scope." },
	{ .bit =  22, .name = "sys_boot",
	  .summary = "Use the reboot(2) system call" },
	{ .bit =  23, .name = "sys_nice",
	  .summary = "Raise process nice value and change the nice value for arbitrary processes." },
	{ .bit =  24, .name = "sys_resource",
	  .summary = "Manage resource limits on filesystems, ulimits, etc." },
	{ .bit =  25, .name = "sys_time",
	  .summary = "Set the system clock and manage realtime clock(s)." },
	{ .bit =  26, .name = "sys_tty_config",
	  .summary = "Manage virtual teletype terminals and their settings." },
	{ .bit =  27, .name = "mknod",
	  .summary = "Create special files using mknod(2)." },
	{ .bit =  28, .name = "lease",
	  .summary = "Establish leases on arbitrary files via fcntl(2)." },
	{ .bit =  29, .name = "audit_write",
	  .summary = "Write records to kernel auditing log." },
	{ .bit =  30, .name = "audit_control",
	  .summary = "Manage kernel auditing." },
	{ .bit =  31, .name = "setfcap",
	  .summary = "Set arbitrary capabilities on a file." },
	{ .bit =  32, .name = "mac_override",
	  .summary = "Override Mandatory Access Control (MAC).  Implemented for the Smack LSM." },
	{ .bit =  33, .name = "mac_admin",
	  .summary = "Allow MAC configuration or state changes.  Implemented for the Smack Linux Security Module (LSM)." },
	{ .bit =  34, .name = "syslog",
	  .summary = "Perform privileged syslog(2) operations." },
	{ .bit =  35, .name = "wake_alarm",
	  .summary = "Trigger something that will wake up the system." },
	{ .bit =  36, .name = "block_suspend",
	  .summary = "Employ features that can block system suspend." },
	{ .bit =  37, .name = "audit_read",
	  .summary = "Allow reading the audit log via a multicast netlink socket." },
	{ ~0, NULL, NULL }
};
